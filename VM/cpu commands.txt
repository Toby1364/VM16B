0x0000 ~ Store value in register 0
0x0001 ~ Store value in register 1
0x0002 ~ Store value in register 2
0x0003 ~ Store value in register 3
0x0004 ~ Store value in register 4
0x0005 ~ Store value in register 5
0x0006 ~ Store value in register 6
0x0007 ~ Store value in register 7

0x0008 ~ Add r0 and r1
0x0009 ~ Subtract r1 from r0
0x000a ~ Multiply r0 by r1
0x000b ~ Divide r0 by r1

0x000c ~ Put r0 to address

0x000d ~ Put address to r0

0x000e ~ Put r0 in r1
0x000f ~ Put r0 in r2
0x0010 ~ Put r0 in r3
0x0011 ~ Put r0 in r4
0x0012 ~ Put r0 in r5
0x0013 ~ Put r0 in r6
0x0014 ~ Put r0 in r7

0x0015 ~ Put r1 in r0
0x0016 ~ Put r2 in r0
0x0017 ~ Put r3 in r0
0x0018 ~ Put r4 in r0
0x0019 ~ Put r5 in r0
0x001a ~ Put r6 in r0
0x001b ~ Put r7 in r0

0x001c ~ Set Pointer

0x001d ~ Put Result in r0

0x001e ~ Set Pointer if r0 = r1
0x001f ~ Set Pointer if r0 > r1
0x0020 ~ Set Pointer if r0 < r1
0x0021 ~ Set Pointer if r0 != r1

0x0022 ~ Clear rendering ram

0x0023 ~ Push r0 on main stack
0x0024 ~ Pop from main stack to result

0x0025 ~ Put r0 to address on r1

0x0026 ~ return to last jump position

0x0027 ~ Halt
